{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","classname","fontSize","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","join","filter","element","length","defaultProps","Alert","height","alert","word","lower","charAt","slice","capatilize","msg","About","myStyle","App","setMode","setAlert","showAlert","message","setTimeout","document","body","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMAIe,SAASA,EAAOC,GAC7B,OACE,qBACEC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MADtE,SAGE,sBAAKD,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeE,GAAG,IAAlC,SACGH,EAAMI,QAET,wBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAY,eAAa,OAAOE,GAAG,IAAnD,oBAIF,oBAAIF,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,SAA9B,SACGH,EAAMO,iBAeb,sBACEN,UAAS,sCACQ,UAAfD,EAAME,KAAmB,OAAS,SAFtC,UAKE,uBACED,UAAU,mBACVI,KAAK,WACLG,QAASR,EAAMS,WACfC,KAAK,SACLJ,GAAG,2BAEL,uBACEL,UAAU,mBACVU,QAAQ,yBAFV,kCC1DG,SAASC,EAASZ,GAC/B,IAyBA,EAAwBa,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACE,qCACE,sBACEd,UAAU,YACVe,MAAO,CACLC,MAAsB,SAAfjB,EAAME,KAAkB,QAAU,WAH7C,UAME,oBAAIgB,UAAU,OAAOF,MAAO,CAAEG,SAAU,QAAxC,SACGnB,EAAMoB,UAET,qBAAKnB,UAAU,OAAf,SACE,0BACEA,UAAU,eACVoB,MAAOP,EACPQ,SAvBa,SAACC,GAEtBR,EAAQQ,EAAMC,OAAOH,QAsBbL,MAAO,CACLS,gBAAgC,SAAfzB,EAAME,KAAkB,UAAY,QACrDe,MAAsB,SAAfjB,EAAME,KAAkB,QAAU,WAE3CI,GAAG,QACHoB,KAAK,QAGT,wBAEEzB,UAAU,4BACVO,QAvDgB,WAEtBO,EADc,KAmDV,wBAOA,wBAEEd,UAAU,4BACVO,QAzDc,WAEpB,IAAImB,EAAUb,EAAKc,cACnBb,EAAQY,IAmDJ,kCAOA,wBAEE1B,UAAU,4BACVO,QA3Dc,WAEpB,IAAImB,EAAUb,EAAKe,cACnBd,EAAQY,IAqDJ,kCAOA,wBAEE1B,UAAU,4BACVO,QA7DkB,WACxB,IAAImB,EAAUb,EAAKgB,MAAM,QACzBf,EAAQY,EAAQI,KAAK,OAwDjB,oCAQF,sBACE9B,UAAU,iBACVe,MAAO,CACLC,MAAsB,SAAfjB,EAAME,KAAkB,QAAU,WAH7C,UAME,mDACA,8BAEIY,EAAKgB,MAAM,OAAOE,QAAO,SAACC,GACxB,OAA0B,IAAnBA,EAAQC,UACdA,OACH,IALJ,aAMapB,EAAKoB,OANlB,iBAQA,8BACG,KACCpB,EAAKgB,MAAM,KAAKE,QAAO,SAACC,GACtB,OAA0B,IAAnBA,EAAQC,UACdA,OAAQ,IAJf,kBAOA,yCACA,4BAAIpB,EAAKoB,OAAS,EAAIpB,EAAO,8BD7BrCf,EAAOoC,aAAe,CACpB/B,MAAO,iBACPG,UAAW,SE1DE6B,MApBf,SAAepC,GAMb,OACE,qBAAKgB,MAAO,CAAEqB,OAAQ,QAAtB,SACGrC,EAAMsC,OACL,sBACErC,UAAS,sBAAiBD,EAAMsC,MAAMjC,KAA7B,gCACTK,KAAK,QAFP,UAIE,uCAZW,SAAC6B,GAClB,IAAMC,EAAQD,EAAKV,cACnB,OAAOW,EAAMC,OAAO,GAAGb,cAAgBY,EAAME,MAAM,GAUnCC,CAAW3C,EAAMsC,MAAMjC,SAJnC,MAIsDL,EAAMsC,MAAMM,UC6F3DC,MA1Gf,SAAe7C,GAMb,IAAI8C,EAAU,CACZ7B,MAAsB,SAAfjB,EAAME,KAAkB,QAAU,UACzCuB,gBAAgC,SAAfzB,EAAME,KAAkB,iBAAmB,SAG9D,OACE,sBAAKD,UAAU,YAAf,UACE,oBACEA,UAAU,OACVe,MAAO,CAAEC,MAAsB,SAAfjB,EAAME,KAAkB,QAAU,WAFpD,2BAMA,sBAAKD,UAAU,YAAYK,GAAG,mBAAmBU,MAAO8B,EAAxD,UACE,sBAAK7C,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBACEL,UAAU,mBACVI,KAAK,SACLW,MAAO8B,EACP,iBAAe,WACf,iBAAe,eACf,gBAAc,OACd,gBAAc,cAPhB,SASE,8DAGJ,qBACExC,GAAG,cACHL,UAAU,mCACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBe,MAAO8B,EAAvC,2PAQJ,sBAAK7C,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBACEL,UAAU,6BACVe,MAAO8B,EACPzC,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,QACd,gBAAc,cAPhB,SASE,sDAGJ,qBACEC,GAAG,cACHL,UAAU,8BACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBe,MAAO8B,EAAvC,iGAMJ,sBAAK7C,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,eAApC,SACE,wBACEL,UAAU,6BACVe,MAAO8B,EACPzC,KAAK,SACL,iBAAe,WACf,iBAAe,iBACf,gBAAc,QACd,gBAAc,gBAPhB,SASE,6DAGJ,qBACEC,GAAG,gBACHL,UAAU,8BACV,kBAAgB,eAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBe,MAAO8B,EAAvC,+K,OCrCGC,MApDf,WACE,MAAwBlC,mBAAS,SAAjC,mBAAOX,EAAP,KAAa8C,EAAb,KACA,EAA0BnC,mBAAS,MAAnC,mBAAOyB,EAAP,KAAcW,EAAd,KAEMC,EAAY,SAACC,EAAS9C,GAC1B4C,EAAS,CACPL,IAAKO,EACL9C,KAAMA,IAER+C,YAAW,WACTH,EAAS,QACR,OAcL,OACE,mCAGE,eAAC,IAAD,WACE,cAAClD,EAAD,CAAQK,MAAM,UAAUF,KAAMA,EAAMO,WAhBvB,WACJ,UAATP,GACF8C,EAAQ,QACRK,SAASC,KAAKtC,MAAMS,gBAAkB,UACtCyB,EAAU,6BAA8B,aAExCF,EAAQ,SACRK,SAASC,KAAKtC,MAAMS,gBAAkB,QACtCyB,EAAU,8BAA+B,eASvC,cAAC,EAAD,CAAOZ,MAAOA,IACd,qBAAKrC,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,CAAOtD,KAAMA,MAGf,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC5C,EAAD,CACEsC,UAAWA,EACX9B,QAAQ,kCACRlB,KAAMA,iBC3CtBuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,SAASO,eAAe,W","file":"static/js/main.f3de1be4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                {props.aboutText}\n              </Link>\n            </li>\n          </ul>\n          {/* <form className=\"d-flex\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n          <div\n            className={`form-check form-switch text-${\n              props.mode === \"light\" ? \"dark\" : \"light\"\n            }`}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              onClick={props.toggleMode}\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Dark Mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string.isRequired,\n};\n\nNavbar.defaultProps = {\n  title: \"Set title here\",\n  aboutText: \"About\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const handleClearText = () => {\n    let newText = \"\";\n    setText(newText);\n  };\n\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was clicked: \" +  text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleLoClick = () => {\n    // console.log(\"Uppercase was clicked: \" +  text);\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n  };\n\n  const handleOnChange = (event) => {\n    // console.log(\"On change\");\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState(\"\");\n  // text = \"new text\"; // Wrong way to change the state\n  // setText(\"new text\"); // Correct way to change the state\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\n        }}\n      >\n        <h1 classname=\"mb-4\" style={{ fontSize: \"30px\" }}>\n          {props.heading}\n        </h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\n            }}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <button\n          // disabled={text.length === 0}\n          className=\"btn btn-primary mx-2 my-1\"\n          onClick={handleClearText}\n        >\n          Clear Text\n        </button>\n        <button\n          // disabled={text.length === 0}\n          className=\"btn btn-primary mx-2 my-1\"\n          onClick={handleUpClick}\n        >\n          Convert to Uppercase\n        </button>\n        <button\n          // disabled={text.length === 0}\n          className=\"btn btn-primary mx-2 my-1\"\n          onClick={handleLoClick}\n        >\n          Convert to Lowercase\n        </button>\n        <button\n          // disabled={text.length === 0}\n          className=\"btn btn-primary mx-2 my-1\"\n          onClick={handleExtraSpaces}\n        >\n          Remove Extra Spaces\n        </button>\n      </div>\n      <div\n        className=\"container my-3\"\n        style={{\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\n        }}\n      >\n        <h2>Your text summary</h2>\n        <p>\n          {\n            text.split(/\\s+/).filter((element) => {\n              return element.length !== 0;\n            }).length\n          }{\" \"}\n          words and {text.length} characters\n        </p>\n        <p>\n          {0.008 *\n            text.split(\" \").filter((element) => {\n              return element.length !== 0;\n            }).length}{\" \"}\n          Minutes read\n        </p>\n        <h2>Preview</h2>\n        <p>{text.length > 0 ? text : \"Nothing to Preview!\"}</p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capatilize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong> {capatilize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction About(props) {\r\n  // const [myStyle, setMyStyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\",\r\n  // });\r\n  //rgb(36 74 104)\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n    backgroundColor: props.mode === \"dark\" ? \"rgb(36 74 104)\" : \"white\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1\r\n        className=\"my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        About TextPro\r\n      </h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              <strong>Rapid Text Analysis </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextPro can be used to manipulate text quickly and efficiently. Be\r\n              it word cound, character count or the time to read a content.\r\n              TextPro is used actively for online text conversions - Blog\r\n              content, Essays, Editing PDF documents Etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              <strong>Free to use </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextPro is free to use online tool. We increase your productivity\r\n              at our cost.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              <strong>Browser Compatible </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextPro works seamlessly across web browsers like Chrome, Firefox,\r\n              Internet Explorer, Safari, Opera. This leaves you with your\r\n              favourite option open.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n      {/* <Navbar/> */}\n      <Router>\n        <Navbar title=\"TextPro\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n\n            <Route exact path=\"/\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Try TextPro - Enter your text..\"\n                mode={mode}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}